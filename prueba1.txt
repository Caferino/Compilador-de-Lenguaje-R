int a = 3, baka = 69, caca, nice[4] = {0, 8, 9, -10}, ohNice[5][4][1] = {0,0,0};
int listaI1, listaI2[6] <- {1,2,3,4,5};
// Una matriz de 3 filas y 3 columnas
float listota[4] <- {1.5, 1.3, 2.3, -5.6};
int valor <- 50;
int matriz[6][6] = {1,1,1,1,1,1,1,1,1};
float cubote[1][2][3][4] = {};
int w = 3;
bool booleanoT = True, booleanoF = False;

// ES IMPORTANTE DECLARAR LAS VARIABLES Y FUNCIONES PRIMERO, DESPUÉS LAS EXPRESIONES 
// LO MISMO ADENTRO LAS FUNCIONES MISMAS, ESA LÓGICA DINÁMICA SE ME FUE DE LA MANO
// OCUPABA REESCRIBIR TODO UNA TERCERA VEZ, CON UNA PILA GIGANTE QUE GUARDARA CADA
// TOKEN DEL PROGRAMA DESDE EL PRINCIPIO HUBIERA PODIDO TAL VEZ

// # ! MUCHO CUIDADO CON DECLARAR VARIABLES IGUALES, AÚN NO AÑADO VERIFICACIÓN

void uno(int p, int q, int m){
    int varAdentroDeUno1 = 5;
    float varAdentroDeUno2 = 10;
    bool varAdentroDeUno3 = -5;
    int varAdentroDeUno4 = 1;

}

void dos(float pastor, bool salsa){
    // print("Me hice caca en el pantalón II.");
}

void tres() {
    // Caca
}

int ultimaVar, Cassius = 49, Draegan <- 33, Daniel[5][5] = {1,2,3}, Cacoide;

int x = 5, y = 3, z = 8;
while(x + y > z - 4){
    x = x - 1;
}
if (x > 6 / 2) {
    x = x - -2;
}
else{
    x = x + 1;
    y = y * 1;
    y = y / 1;
}

// tres(); // Regresa error de RIGHTPAREN, creo no tengo Production Rule para Function Calls sin params aún
// cuatro(); // Para romperlo llamando una function que no existe

print(x);
x = x + (440 - 20);
print(x);